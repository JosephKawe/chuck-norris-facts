{"version":3,"file":"static/js/184.4af60f35.chunk.js","mappings":"mKAIA,MA+CA,EA/C6BA,KAC3B,MAAOC,GAAS,QAAEC,EAAO,KAAEC,EAAI,MAAEC,KAAWC,EAAAA,EAAAA,GAAaC,EAAAA,GAA8B,CACrFC,YAAa,kBAGfC,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,CAACA,IAYJ,OANAO,EAAAA,EAAAA,YAAU,KACJL,GACFM,QAAQC,IAAIP,EACd,GACC,CAACA,KAGFQ,EAAAA,EAAAA,MAAA,WACEC,UAAU,oYACV,YAAU,SACV,YAAWV,EAAQW,SAAA,EAEnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sDAAqDC,SAAC,6BACnEX,IAAYE,IACXO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EAACC,EAAAA,EAAAA,KAAA,WAASF,UAAU,+IAA+IG,KAAK,SAAS,aAAW,qBAA4BD,EAAAA,EAAAA,KAAA,KAAGF,UAAU,+EAA+E,aAAW,eAAcC,SAAC,6BAIrYT,IACCU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4EAA2EC,UACxFF,EAAAA,EAAAA,MAAA,KAAGI,KAAK,QAAQH,UAAU,kCAAiCC,SAAA,CAAC,UAClDT,EAAMY,aAInBb,GAAQA,EAAKc,qBACZN,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAL,SAAA,EAAEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mCAAkCC,SAC9CV,EAAKc,sBACJH,EAAAA,EAAAA,KAAA,UAAQK,QAhCEC,KAClBnB,GAAS,EA+B6BW,UAAU,yPAAwPC,SAAC,wBAE/R,C,2FC7CP,MAAMP,GAA+Be,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAOlCC,GAA8BH,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iFAMjCG,GAAoCL,EAAAA,EAAAA,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kIAMvCK,GAAgCP,EAAAA,EAAAA,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sF","sources":["pages/RandomFact.tsx","queries.ts"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_RANDOM_CHUCK_NORRIS_FACT } from '../queries';\n\nconst RandomFact: React.FC = () => {\n  const [getFact, { loading, data, error }] = useLazyQuery(GET_RANDOM_CHUCK_NORRIS_FACT, {\n    fetchPolicy: 'network-only',\n  });\n\n  useEffect(() => {\n    getFact();\n  }, [getFact]);\n\n  const handleClick = () => {\n    getFact();\n  };\n\n  useEffect(() => {\n    if (data) {\n      console.log(data);\n    }\n  }, [data]);\n\n  return (\n    <section\n      className='xs:max-w-[85%] xs:min-w-[85%] sm:max-w-[80%] sm:min-w-[80%] md:max-w-[70%] md:min-w-[70%] sm:landscape:min-w-[70%] sm:landscape:max-w-[70%] md:landscape:min-w-[60%] md:landscape:max-w-[60%] xl:landscape:min-w-[40%] xl:landscape:max-w-[40%] p-4 sm:p-6 md:px-8 md:py-6 bg-zinc-900/80 dark:text-zinc-200 dark:border-2 dark:border-zinc-300 rounded-lg text-center text-pretty cursor-pointer'\n      aria-live=\"polite\"\n      aria-busy={loading}\n    >\n      <h2 className='pb-2 text-sky-500 font-semibold text-lg md:text-2xl'>Chuck Norris Random Fact</h2>\n      {loading && !error && (\n        <div className='flex justify-center items-center mb-2'><article className=\"xs:h-5 md:h-6 xs:w-5 md:w-6 mr-1.5 rounded-full animate-spin border-2 border-l-zinc-200 border-r-zinc-200 border-b-zinc-200 border-t-sky-500\" role=\"status\" aria-label=\"Loading Spinner\"></article><p className='text-lg md:text-xl flex flex-row-reverse gap-x-1 text-zinc-200 animate-pulse' aria-label=\"Loading Fact\">\n        Loading a new Fact...\n      </p></div>\n      )}\n      {error && (\n        <div className='rounded-lg py-4 bg-red-100 dark:bg-red-600 text-red-600 dark:text-red-200'>\n          <p role=\"alert\" className='text-sm sm:text-base md:text-lg'>\n            Error: {error.message}\n          </p>\n        </div>\n      )}\n      {data && data.getChuckNorrisFact && (\n        <><p className=\"text-zinc-200 text-lg md:text-xl\">\n          {data.getChuckNorrisFact}\n        </p><button onClick={handleClick} className='md:text-lg bg-zinc-200 text-zinc-900/80 border-transparent text-sm p-1 px-3 hover:text-sky-500 dark:hover:text-sky-500 duration-150 border-2 dark:border-zinc-200 dark:bg-transparent dark:text-zinc-200 hover:bg-zinc-100 rounded-lg mt-4 font-medium'>Get a New Fact</button></>\n      )}\n    </section>\n  );\n};\n\nexport default RandomFact;\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_RANDOM_CHUCK_NORRIS_FACT = gql`\r\n  query GetChuckNorrisFact {\r\n    getChuckNorrisFact\r\n  }\r\n`;\r\n\r\n\r\nexport const GET_CHUCK_NORRIS_CATEGORIES = gql`\r\n  query GetChuckNorrisCategories {\r\n    getChuckNorrisCategories\r\n  }\r\n`;\r\n\r\nexport const GET_CHUCK_NORRIS_FACT_BY_CATEGORY = gql`\r\n  query GetChuckNorrisFactByCategory($category: String!) {\r\n    getChuckNorrisFactByCategory(category: $category)\r\n  }\r\n`;\r\n\r\nexport const GET_CHUCK_NORRIS_FACT_BY_TEXT = gql`\r\n  query SearchFacts($query: String!) {\r\n    searchFacts(query: $query)\r\n  }\r\n`;\r\n"],"names":["RandomFact","getFact","loading","data","error","useLazyQuery","GET_RANDOM_CHUCK_NORRIS_FACT","fetchPolicy","useEffect","console","log","_jsxs","className","children","_jsx","role","message","getChuckNorrisFact","_Fragment","onClick","handleClick","gql","_templateObject","_taggedTemplateLiteral","GET_CHUCK_NORRIS_CATEGORIES","_templateObject2","GET_CHUCK_NORRIS_FACT_BY_CATEGORY","_templateObject3","GET_CHUCK_NORRIS_FACT_BY_TEXT","_templateObject4"],"sourceRoot":""}